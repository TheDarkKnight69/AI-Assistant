import pyttsx3
import os
import datetime
import variables
import wolframalpha
import requests
import time
import sys
from GoogleNews import GoogleNews
from num2words import num2words

googlenews = GoogleNews()
cnewscheck = 0
question = ["what", "why", "how", "who", "where"]
engine = pyttsx3.init("sapi5")  
voices = engine.getProperty("voices")
engine.setProperty("voice", voices[0].id)

def speak(audio):
    engine.say(audio)  # Speak functions
    engine.runAndWait()

def wishme():
    hour = int(datetime.datetime.now().hour)
    if hour >= 0 and hour < 12:
        speak("Hey!,I am Jarvis")
        time.sleep(0.5)
        speak("Good Morning!")
    elif hour >= 12 and hour < 18:  
        speak("Hey!,I am Jarvis")
        time.sleep(0.5)
        speak("Good Afternoon!")
    else:
        speak(f"Hey!,I am Jarvis")
        time.sleep(0.5)
        speak("Good Evening!")

def takecommand():
    query=input("Enter:")
    try:
        print("Recognizing")
        print("User said :", query)
    except Exception as e:
        return " "
    
    return query
def weather():
    speak("Which city's weather do you want to know?")
    city = takecommand().lower()
    speak(f"Fetching the weather details in {city}")
    apikey = variables.openweather
    url = (
        "https://api.openweathermap.org/data/2.5/weather?q="
        + city
        + "&appid="
        + apikey
        + "&units=metric"
    )
    weatherreq = requests.get(url)
    x = weatherreq.json()
    y = x["main"]
    current_temperature = y["temp"]
    current_pressure = y["pressure"]
    current_humidiy = y["humidity"]
    z = x["weather"]

    weather_description = z[0]["description"]
    speak(
        " Temperature is "
        + str(current_temperature)
        + "degree celcius"
        + "\n atmospheric pressure is "
        + str(current_pressure)
        + " \n in Hpa units"
        + " \n humidity is "
        + str(current_humidiy)
        + "percent"
        + " \n weather description is "
        + str(weather_description)
    )
def news():
    while True:
        speak("Which topic do you want to hear the news or headlines on?")

        newstopic = takecommand().lower()
        if newstopic == "stop":
            break
        if newstopic == " ":
            cnewscheck += 1
            if cnewscheck > 1:
                speak("Logging off from news")
                break
            else:
                continue
        else:
            cnewscheck = 0
            speak(f"Getting news on {newstopic}")
            googlenews.get_news(newstopic)
            googlenews.result()
            a = googlenews.gettext()
            lnews = len(a)
            tempvar1 = ""
            if lnews > 5:
                for i in range(1, 6):
                    tempvar1 = a[i]
                    speak(addordinal(i))
                    time.sleep(0.5)
                    speak(tempvar1)

            else:
                for i in range(1, lnews + 1):
                    tempvar1 = a[i]
                    speak(addordinal(i))
                    time.sleep(0.5)
                    speak(tempvar1)

            googlenews.clear()

def addordinal(n):
    ordinal = num2words(n, to="ordinal_num")  # ordinal values 1 too first
    return ordinal

if __name__ == "__main__":
    while True:
        querystart=takecommand().lower()
        if("jarvis" in querystart):
            wishme()
            while True:
                query=takecommand().lower()
                if("open notepad" in query):
                    speak("opening Notepad")
                    notepad=variables.notepad
                    os.startfile(notepad)
                    query=""
                elif(" open calculator" in query):
                    speak("Opening Calculator")
                    calculator=variables.calculator
                    os.startfile(calculator)
                elif any(keyword in query for keyword in question):
                    if "weather" in query:
                        weather()
                    elif "time" in query:
                        strt = datetime.datetime.now().strftime("%H:%M:%S")
                        speak(f"The time is {strt}")
                    else:
                        try:
                            client = wolframalpha.Client(variables.wolframalpha)
                            res=client.query(query)
                            print(next(res.results).text)
                            answer = next(res.results).text
                            speak(f"The Answer is {answer}")
                        except:
                            speak("The question you asked was either wrong or invalid")
                    
                elif(("news" or "headlines") in query):
                    news()
                elif("stop" in query):
                    speak("Do you want me to go to sleep?")
                    y = takecommand().lower()
                    if "yes" in y:
                        speak("Shut down or sleep?")
                        u=takecommand().lower()
                        if "shut down" in u:
                            speak("Have a good day,Bye")
                            sys.exit()
                        elif "sleep" in u:
                            break
                    else:
                        speak("Wrong choice,Please retry")
                else:
                    pass
                    
                